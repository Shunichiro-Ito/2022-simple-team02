/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 264 224)
	(text "EXMEMRegister" (rect 5 0 75 12)(font "Arial" ))
	(text "inst" (rect 8 192 20 204)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "memRead_EX" (rect 0 0 62 12)(font "Arial" ))
		(text "memRead_EX" (rect 21 27 83 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "inputEnable_EX" (rect 0 0 63 12)(font "Arial" ))
		(text "inputEnable_EX" (rect 21 43 84 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "memWrite_EX" (rect 0 0 62 12)(font "Arial" ))
		(text "memWrite_EX" (rect 21 59 83 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "branch_EX" (rect 0 0 46 12)(font "Arial" ))
		(text "branch_EX" (rect 21 75 67 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "regWrite_EX" (rect 0 0 54 12)(font "Arial" ))
		(text "regWrite_EX" (rect 21 91 75 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 0 112)
		(input)
		(text "memToReg_EX" (rect 0 0 68 12)(font "Arial" ))
		(text "memToReg_EX" (rect 21 107 89 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 1))
	)
	(port
		(pt 0 128)
		(input)
		(text "changeEnable" (rect 0 0 55 12)(font "Arial" ))
		(text "changeEnable" (rect 21 123 76 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 0 144)
		(input)
		(text "reset" (rect 0 0 20 12)(font "Arial" ))
		(text "reset" (rect 21 139 41 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 0 160)
		(input)
		(text "clock" (rect 0 0 20 12)(font "Arial" ))
		(text "clock" (rect 21 155 41 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 1))
	)
	(port
		(pt 248 32)
		(output)
		(text "memRead_MEM" (rect 0 0 73 12)(font "Arial" ))
		(text "memRead_MEM" (rect 154 27 227 39)(font "Arial" ))
		(line (pt 248 32)(pt 232 32)(line_width 1))
	)
	(port
		(pt 248 48)
		(output)
		(text "inputEnable_MEM" (rect 0 0 74 12)(font "Arial" ))
		(text "inputEnable_MEM" (rect 153 43 227 55)(font "Arial" ))
		(line (pt 248 48)(pt 232 48)(line_width 1))
	)
	(port
		(pt 248 64)
		(output)
		(text "memWrite_MEM" (rect 0 0 73 12)(font "Arial" ))
		(text "memWrite_MEM" (rect 154 59 227 71)(font "Arial" ))
		(line (pt 248 64)(pt 232 64)(line_width 1))
	)
	(port
		(pt 248 80)
		(output)
		(text "branch_MEM" (rect 0 0 56 12)(font "Arial" ))
		(text "branch_MEM" (rect 171 75 227 87)(font "Arial" ))
		(line (pt 248 80)(pt 232 80)(line_width 1))
	)
	(port
		(pt 248 96)
		(output)
		(text "regWrite_MEM" (rect 0 0 64 12)(font "Arial" ))
		(text "regWrite_MEM" (rect 163 91 227 103)(font "Arial" ))
		(line (pt 248 96)(pt 232 96)(line_width 1))
	)
	(port
		(pt 248 112)
		(output)
		(text "memToReg_MEM" (rect 0 0 79 12)(font "Arial" ))
		(text "memToReg_MEM" (rect 148 107 227 119)(font "Arial" ))
		(line (pt 248 112)(pt 232 112)(line_width 1))
	)
	(drawing
		(rectangle (rect 16 16 232 192)(line_width 1))
	)
)
