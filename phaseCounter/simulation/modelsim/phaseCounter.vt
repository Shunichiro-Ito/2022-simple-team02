`timescale 1 ns/ 1 ps
module phaseCounter_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg changeEnable;
reg clock;
reg reset;
// wires                                               
wire p1;
wire p2;
wire p3;
wire p3to4;
wire p4;
wire p5;

// assign statements (if any)                          
phaseCounter i1 (
// port map - connection between master ports and signals/registers   
	.changeEnable(changeEnable),
	.clock(clock),
	.p1(p1),
	.p2(p2),
	.p3(p3),
	.p3to4(p3to4),
	.p4(p4),
	.p5(p5),
	.reset(reset)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
clock <= 0; 
changeEnable <= 1;
reset <= 1;                                                      
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end  
always begin
#50
clock <= ~clock;
end   
always begin 
#100 
reset <= 0;
#900
changeEnable <= 0;
#500
changeEnable <= 1;
#300
changeEnable <= 0;
#200
reset <= 1;
#100 
reset <= 0;

end                                               
endmodule

